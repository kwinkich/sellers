import WebApp from "@twa-dev/sdk";

/**
 * –ù–æ—Ä–º–∞–ª–∏–∑—É–µ—Ç Telegram URL –≤ —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã
 * @param raw –°—ã—Ä–∞—è —Å—Å—ã–ª–∫–∞ (–º–æ–∂–µ—Ç –±—ã—Ç—å @username, https://t.me/username, tg://resolve?domain=username)
 * @returns –û–±—ä–µ–∫—Ç —Å https –∏ tg –≤–µ—Ä—Å–∏—è–º–∏ —Å—Å—ã–ª–∫–∏
 */
function normalizeTgUrl(raw?: string | null): { https?: string; tg?: string } {
  if (!raw) return {};
  let s = raw.trim();

  // –µ—Å–ª–∏ –ø—Ä–∏—Å–ª–∞–ª–∏ '@user' ‚Äî –ø–µ—Ä–µ–≤–æ–¥–∏–º –≤ t.me/user
  if (s.startsWith("@")) s = `https://t.me/${s.slice(1)}`;

  try {
    const u = new URL(s, "https://t.me"); // –±–∞–∑–æ–π —Å—á–∏—Ç–∞–µ–º t.me
    if (u.hostname === "telegram.me") u.hostname = "t.me";

    // username –∏–∑ –ø—É—Ç–∏
    const username = u.pathname.replace(/^\/+/, "");
    if (username) {
      return {
        https: `https://t.me/${username}`,
        tg: `tg://resolve?domain=${username}`,
      };
    }
  } catch {}
  return {};
}

/**
 * –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –æ—Ç–∫—Ä—ã–≤–∞—Ç–µ–ª—å Telegram –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –¥–ª—è –≤—Å–µ—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º
 * –ü—Ä–æ–±—É–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–ø–æ—Å–æ–±–æ–≤ –≤ –ø–æ—Ä—è–¥–∫–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞:
 * 1. WebApp.openTelegramLink() (–Ω–∞—Ç–∏–≤–Ω—ã–π –¥–ª—è TWA)
 * 2. WebApp.openLink() (—á–∞—Å—Ç–æ —Å–ø–∞—Å–∞–µ—Ç –¥–µ—Å–∫—Ç–æ–ø-–∫–ª–∏–µ–Ω—Ç—ã)
 * 3. window.open() (–ø–æ—Å–ª–µ–¥–Ω—è—è —Å–æ–ª–æ–º–∏–Ω–∫–∞)
 *
 * @param raw –°—ã—Ä–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ Telegram –∫–æ–Ω—Ç–∞–∫—Ç
 */
export function openTelegramContact(raw?: string | null) {
  const { https, tg } = normalizeTgUrl(raw);
  const platform = WebApp?.platform; // 'ios' | 'android' | 'tdesktop' | 'macos' | ...
  const canOTL = Boolean((WebApp as any)?.openTelegramLink);
  const canOL = Boolean((WebApp as any)?.openLink);

  console.log("üîó Opening Telegram contact:", {
    raw,
    https,
    tg,
    platform,
    canOTL,
    canOL,
  });

  // 1) –ü—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–æ: openTelegramLink (t.me –∏–ª–∏ tg://)
  if (canOTL) {
    const url =
      platform === "macos" || platform === "tdesktop"
        ? tg ?? https
        : https ?? tg;
    if (url) {
      console.log("üì± Trying openTelegramLink with:", url);
      try {
        WebApp.openTelegramLink(url);
        return;
      } catch (error) {
        console.warn("openTelegramLink failed:", error);
      }
    }
  }

  // 2) –§–æ–ª–±—ç–∫ —á–µ—Ä–µ–∑ openLink (–¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–∞ —á–∞—Å—Ç–æ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –∫–∞–∫ –Ω–∞–¥–æ)
  if (canOL && (https || tg)) {
    // –ù–∞ –¥–µ—Å–∫—Ç–æ–ø–µ –ø–æ–ø—Ä–æ–±—É–µ–º tg://, –∏–Ω–∞—á–µ https://
    const url =
      platform === "macos" || platform === "tdesktop"
        ? tg ?? https
        : https ?? tg;
    if (url) {
      console.log("üîó Trying openLink with:", url);
      try {
        WebApp.openLink(url, { try_instant_view: false });
        return;
      } catch (error) {
        console.warn("openLink failed:", error);
      }
    }
  }

  // 3) –ü–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–Ω—Å ‚Äî –≤–Ω–µ—à–Ω–∏–π –±—Ä–∞—É–∑–µ—Ä
  if (https) {
    console.log("üåê Fallback to window.open with:", https);
    window.open(https, "_blank", "noopener");
  } else {
    console.error("‚ùå No valid Telegram URL found");
  }
}
